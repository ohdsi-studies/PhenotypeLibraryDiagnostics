on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

name: Test-study-package

jobs:
  Test-study-package:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release', rspm: "https://cloud.r-project.org"}
          - {os: macOS-latest, r: 'release', rspm: "https://cloud.r-project.org"}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/latest"}

    env:
      GITHUB_PAT: ${{ secrets.GH_TOKEN }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RENV_CONFIG_REPOS_OVERRIDE: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: Install system requirements
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install -y make
          sudo apt-get install -y default-jdk
          sudo apt-get install -y libcurl4-openssl-dev
          sudo apt-get install -y libssl-dev

      - uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 1
          
      - name: Install rcmdcheck
        run: |
          install.packages('rcmdcheck')
        shell: Rscript {0}
          
      # - uses: r-lib/actions/check-r-package@v2
      #   with:
      #     args: 'c("--no-manual")'
      #     error-on: '"warning"'


  Release:
    needs: Test-study-package

    runs-on: macOS-latest

    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main' }}

    steps:

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check if version has increased
        run: |
          echo "new_version="$(perl compare_versions --tag) >> $GITHUB_ENV
      - name: Display new version number
        if: ${{ env.new_version != '' }}
        run: |
          echo "${{ env.new_version }}"
      - name: Create release
        if: ${{ env.new_version != '' }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.new_version }}
          release_name: Release ${{ env.new_version }}
          body: |
            See NEWS.md for release notes.
          draft: false
          prerelease: false